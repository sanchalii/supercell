"use strict";(()=>{var C=Object.defineProperty,O=Object.defineProperties;var k=Object.getOwnPropertyDescriptors;var v=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,K=Object.prototype.propertyIsEnumerable;var L=(i,t,e)=>t in i?C(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e,d=(i,t)=>{for(var e in t||(t={}))D.call(t,e)&&L(i,e,t[e]);if(v)for(var e of v(t))K.call(t,e)&&L(i,e,t[e]);return i},u=(i,t)=>O(i,k(t));var s=(i,t,e)=>new Promise((a,o)=>{var r=n=>{try{f(e.next(n))}catch(S){o(S)}},h=n=>{try{f(e.throw(n))}catch(S){o(S)}},f=n=>n.done?a(n.value):Promise.resolve(n.value).then(r,h);f((e=e.apply(i,t)).next())});var p={ssoBaseUrl:"https://accounts.supercell.com",debugLogEnabled:!1,accountIdCookieName:"scsso_scid",authorizationCacheLocalStorageKey:"scsso_authorization"};var l=p,m=60*1e3,U=2.5*m,z=5*m,b=10*m,E=25*m,w=200,M=5e3,A=i=>{let t=document.cookie.split(";").find(e=>e.trim().startsWith(i+"="));return t?t.split("=")[1]:null},y=(i,t)=>i+Math.random()*(t-i),T=()=>document.visibilityState==="visible"||document.hasFocus(),c=class i extends Error{constructor(){super("Authorization has been revoked"),Object.setPrototypeOf(this,i.prototype)}},I=(()=>{var i="scsso_localstorage_test";try{return localStorage.setItem(i,i),localStorage.removeItem(i),!0}catch(t){return!1}})(),g=class{constructor(t){let e=typeof t.debugLogEnabled!="undefined"?t.debugLogEnabled:l.debugLogEnabled;this.options=u(d({},t),{authorizationCacheLocalStorageKey:t.authorizationCacheLocalStorageKey||l.authorizationCacheLocalStorageKey,ssoBaseUrl:t.ssoBaseUrl||l.ssoBaseUrl,accountIdCookieName:t.accountIdCookieName||l.accountIdCookieName,debugLogEnabled:e}),this.state={failedTicks:0,lastLoginTime:0,lastRevalidationTime:0,wasActive:T()}}start(){this.state.cachedAuthorization=this.loadCachedAuthorization();let t=A(this.options.accountIdCookieName);return this.tick(),{selectedAccountId:t}}stop(){return s(this,null,function*(){this.state.timerId&&clearTimeout(this.state.timerId)})}refresh(){return s(this,null,function*(){return this.state.timerId&&clearTimeout(this.state.timerId),this.state=u(d({},this.state),{timerId:void 0,cachedAuthorization:void 0,failedTicks:0,lastLoginTime:0,lastRevalidationTime:0}),new Promise((t,e)=>s(this,null,function*(){try{yield this.tick(),t()}catch(a){e(a)}}))})}logout(){return s(this,null,function*(){yield fetch(this.options.ssoBaseUrl+"/oauth/sso/logout",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},credentials:"include"}),yield this.options.onLogout(),this.resetState()})}tick(){return s(this,null,function*(){let t=!1;try{let e=this.state.wasActive;if(T())this.state.wasActive=!0,e||this.debugLog("Window is now active again");else{this.state.wasActive=!1,e&&this.debugLog("Window is not active, waiting for it to become active");return}let a=A(this.options.accountIdCookieName),o=this.state.cachedAuthorization;if(o&&(o.timestamp+U<new Date().getTime()||o.accountId!==a)&&(this.debugLog("Clearing stale authorization cache"),this.resetCachedAuthorization()),!a&&this.state.loggedInAccountId){this.debugLog("User-initiated log out detected"),yield this.handleLogout();return}if(a&&this.state.loggedInAccountId&&a!==this.state.loggedInAccountId){this.debugLog("User-initiated account switch detected (from "+this.state.loggedInAccountId+" to "+a+")"),yield this.handleLogin();return}if(a&&!this.state.loggedInAccountId){this.debugLog("SSO login available for "+a),yield this.handleLogin();return}if(this.state.loggedInAccountId){let r=new Date().getTime()-this.state.lastRevalidationTime;this.state.revalidationInterval&&r>=this.state.revalidationInterval&&(yield this.handleRefresh())}}catch(e){throw t=!0,this.resetCachedAuthorization(),e}finally{let e=100;if(t){let a=Math.random(),o=w*2**this.state.failedTicks;e=Math.round(Math.min(M,Math.max(w,o*a))),this.debugLog("Tick failed "+(this.state.failedTicks+1)+" times, retrying in "+e+"ms")}this.state.failedTicks=t?this.state.failedTicks+1:0,this.state.timerId=setTimeout(()=>this.tick(),e)}})}ssoAuthorize(){return s(this,null,function*(){if(this.state.cachedAuthorization)return this.state.cachedAuthorization;let t=new URLSearchParams({client_id:this.options.clientId,scope:this.options.scope}),e=yield fetch(this.options.ssoBaseUrl+"/oauth/sso/authorize",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t,credentials:"include"}),a=yield e.json();if(e.ok&&a.ok){let o=a.data,r=new Date().getTime(),h={authorizationCode:o.authorizationCode,accountId:o.scid,timestamp:r};return this.setCachedAuthorization(h),h}else throw e.status===401&&a.error==="unauthorized"?(this.debugLog("/oauth/sso/authorize call failed with 401 Unauthorized response",{status:e.status,body:a}),new c):(this.debugLog("/oauth/sso/authorize call failed with unexpected status / body",{status:e.status,body:a}),new Error("/oauth/sso/authorize failed"))})}debugLog(t,e){if(this.options.debugLogEnabled){let a=new Date().toISOString();e?console.log("["+a+"][SSOSDK]: "+t,e):console.log("["+a+"][SSOSDK]: "+t)}}handleLogout(){return s(this,null,function*(){try{this.resetCachedAuthorization(),yield this.options.onLogout(),this.resetState()}catch(t){throw this.debugLog("onLogout() failed",t),t}})}handleLogin(){return s(this,null,function*(){try{let t=yield this.ssoAuthorize();yield this.options.onLogin({authorizationCode:t.authorizationCode,accountId:t.accountId}),this.state.loggedInAccountId=t.accountId,this.state.lastLoginTime=new Date().getTime(),this.state.lastRevalidationTime=t.timestamp;let e=this.state.lastLoginTime-t.timestamp;this.state.revalidationInterval=y(z,b)-e,this.debugLog("SSO login successful to "+t.accountId+". Re-validating authorization in "+Math.ceil(this.state.revalidationInterval/1e3)+" seconds (authorization age "+Math.ceil(e/1e3)+" seconds)")}catch(t){if(this.debugLog("SSO login failed",t),t instanceof c){yield this.handleLogout();return}throw t}})}handleRefresh(){return s(this,null,function*(){let t=new Date().getTime()-this.state.lastLoginTime;try{let e=yield this.ssoAuthorize();t>=E&&(this.debugLog("Login needs to be refreshed"),yield this.options.onLogin({authorizationCode:e.authorizationCode,accountId:e.accountId}),this.state.loggedInAccountId=e.accountId,this.state.lastLoginTime=new Date().getTime()),this.state.lastRevalidationTime=new Date().getTime(),this.state.revalidationInterval=y(z,b),this.debugLog("Authorization re-validation successful. Re-validating authorization in "+Math.ceil(this.state.revalidationInterval/1e3)+" seconds")}catch(e){if(this.debugLog("SSO authorization re-validation failed",e),e instanceof c){yield this.handleLogout();return}throw e}})}loadCachedAuthorization(){if(!I)return;let t=localStorage.getItem(this.options.authorizationCacheLocalStorageKey);if(t){let e=JSON.parse(t);if(!e.timestamp){this.debugLog("Invalid cached authorization");return}return e}}resetCachedAuthorization(){this.state.cachedAuthorization=void 0,I&&localStorage.removeItem(this.options.authorizationCacheLocalStorageKey)}setCachedAuthorization(t){this.state.cachedAuthorization=t,I&&localStorage.setItem(this.options.authorizationCacheLocalStorageKey,JSON.stringify(t))}resetState(){this.state=u(d({},this.state),{loggedInAccountId:void 0,lastLoginTime:0,lastRevalidationTime:0,revalidationInterval:void 0})}};window.SSOSDK=g;})();
